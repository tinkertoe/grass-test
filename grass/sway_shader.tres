[gd_resource type="VisualShader" load_steps=38 format=2]

[ext_resource path="res://grass/grass_texture.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=2]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=3]
uniform_name = "GrassColor"

[sub_resource type="VisualShaderNodeVectorOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "vertex"

[sub_resource type="OpenSimplexNoise" id=6]
seed = 240247

[sub_resource type="NoiseTexture" id=7]
seamless = true
noise = SubResource( 6 )

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = SubResource( 7 )
texture_type = 1

[sub_resource type="OpenSimplexNoise" id=9]
seed = 4600104

[sub_resource type="NoiseTexture" id=10]
seamless = true
noise = SubResource( 9 )

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = SubResource( 10 )
texture_type = 1

[sub_resource type="VisualShaderNodeVectorOp" id=12]

[sub_resource type="VisualShaderNodeVectorCompose" id=13]

[sub_resource type="VisualShaderNodeVectorOp" id=14]
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=15]
constant = 0.25

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=17]

[sub_resource type="VisualShaderNodeVectorOp" id=18]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=19]
uniform_name = "Windspeed"

[sub_resource type="VisualShaderNodeVec3Uniform" id=20]
uniform_name = "WindStrength"

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=22]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=23]
function = 6

[sub_resource type="VisualShaderNodeVectorOp" id=24]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 0, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=25]
function = 1

[sub_resource type="VisualShaderNodeVectorOp" id=26]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 0, 0, 0 ) ]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id=27]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=28]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=29]

[sub_resource type="VisualShaderNodeVec3Uniform" id=30]
uniform_name = "GrassPosition"

[sub_resource type="VisualShaderNodeVec3Uniform" id=31]
uniform_name = "ObjectPosition"

[sub_resource type="VisualShaderNodeScalarUniform" id=32]
uniform_name = "AffectionRadius"

[sub_resource type="VisualShaderNodeInput" id=33]
input_name = "time"

[sub_resource type="OpenSimplexNoise" id=34]
seed = 7

[sub_resource type="NoiseTexture" id=35]
seamless = true
noise = SubResource( 34 )

[sub_resource type="VisualShaderNodeTexture" id=36]
texture = SubResource( 35 )
texture_type = 1

[resource]
code = "shader_type spatial;
render_mode cull_disabled, diffuse_toon;

uniform vec3 GrassPosition;
uniform vec3 ObjectPosition;
uniform float AffectionRadius;
uniform vec3 Windspeed;
uniform sampler2D tex_vtx_7 : hint_albedo;
uniform sampler2D tex_vtx_15 : hint_albedo;
uniform sampler2D tex_vtx_16 : hint_albedo;
uniform vec3 WindStrength;
uniform vec4 GrassColor : hint_color;
uniform sampler2D tex_frg_2;



void vertex() {
// Input:25
	vec3 n_out25p0 = VERTEX;

// VectorDecompose:26
	float n_out26p0 = n_out25p0.x;
	float n_out26p1 = n_out25p0.y;
	float n_out26p2 = n_out25p0.z;

// VectorUniform:47
	vec3 n_out47p0 = GrassPosition;

// VectorUniform:48
	vec3 n_out48p0 = ObjectPosition;

// VectorOp:32
	vec3 n_out32p0 = n_out47p0 - n_out48p0;

// VectorFunc:37
	vec3 n_out37p0 = abs(n_out32p0);

// ScalarUniform:49
	float n_out49p0 = AffectionRadius;

// VectorOp:40
	vec3 n_out40p0 = n_out37p0 / vec3(n_out49p0);

// VectorFunc:39
	vec3 n_out39p0 = max(min(n_out40p0, vec3(1.0)), vec3(0.0));

// VectorOp:38
	vec3 n_in38p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out38p0 = n_in38p0 - n_out39p0;

// VectorOp:44
	vec3 n_out44p0 = n_out47p0 - n_out48p0;

// VectorOp:45
	vec3 n_out45p0 = n_out38p0 * n_out44p0;

// Input:6
	float n_out6p0 = TIME;

// VectorUniform:28
	vec3 n_out28p0 = Windspeed;

// VectorOp:10
	vec3 n_out10p0 = vec3(n_out6p0) * n_out28p0;

// Texture:7
	vec4 tex_vtx_7_read = texture(tex_vtx_7, n_out10p0.xy);
	vec3 n_out7p0 = tex_vtx_7_read.rgb;
	float n_out7p1 = tex_vtx_7_read.a;

// Texture:15
	vec4 tex_vtx_15_read = texture(tex_vtx_15, n_out10p0.xy);
	vec3 n_out15p0 = tex_vtx_15_read.rgb;
	float n_out15p1 = tex_vtx_15_read.a;

// Texture:16
	vec4 tex_vtx_16_read = texture(tex_vtx_16, n_out10p0.xy);
	vec3 n_out16p0 = tex_vtx_16_read.rgb;
	float n_out16p1 = tex_vtx_16_read.a;

// VectorCompose:21
	vec3 n_out21p0 = vec3(dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out15p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out16p0, vec3(0.333333, 0.333333, 0.333333)));

// Scalar:23
	float n_out23p0 = 0.250000;

// VectorOp:22
	vec3 n_out22p0 = n_out21p0 - vec3(n_out23p0);

// VectorUniform:29
	vec3 n_out29p0 = WindStrength;

// VectorOp:30
	vec3 n_out30p0 = n_out22p0 * n_out29p0;

// VectorOp:46
	vec3 n_out46p0 = n_out45p0 + n_out30p0;

// VectorOp:27
	vec3 n_out27p0 = vec3(n_out26p1) * n_out46p0;

// Input:13
	vec3 n_out13p0 = VERTEX;

// VectorOp:20
	vec3 n_out20p0 = n_out27p0 + n_out13p0;

// Output:0
	VERTEX = n_out20p0;

}

void fragment() {
// ColorUniform:4
	vec3 n_out4p0 = GrassColor.rgb;
	float n_out4p1 = GrassColor.a;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// VectorOp:3
	vec3 n_out3p0 = n_out4p0 * n_out2p0;

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -119.5, -438 )
modes/cull = 2
modes/diffuse = 4
nodes/vertex/0/position = Vector2( 1460, -20 )
nodes/vertex/6/node = SubResource( 33 )
nodes/vertex/6/position = Vector2( -1040, 80 )
nodes/vertex/7/node = SubResource( 36 )
nodes/vertex/7/position = Vector2( -560, -300 )
nodes/vertex/10/node = SubResource( 4 )
nodes/vertex/10/position = Vector2( -840, 80 )
nodes/vertex/13/node = SubResource( 5 )
nodes/vertex/13/position = Vector2( 1060, 20 )
nodes/vertex/15/node = SubResource( 8 )
nodes/vertex/15/position = Vector2( -560, -20 )
nodes/vertex/16/node = SubResource( 11 )
nodes/vertex/16/position = Vector2( -560, 260 )
nodes/vertex/20/node = SubResource( 12 )
nodes/vertex/20/position = Vector2( 1260, -20 )
nodes/vertex/21/node = SubResource( 13 )
nodes/vertex/21/position = Vector2( -280, 80 )
nodes/vertex/22/node = SubResource( 14 )
nodes/vertex/22/position = Vector2( -40, 80 )
nodes/vertex/23/node = SubResource( 15 )
nodes/vertex/23/position = Vector2( -280, 220 )
nodes/vertex/25/node = SubResource( 16 )
nodes/vertex/25/position = Vector2( 680, -320 )
nodes/vertex/26/node = SubResource( 17 )
nodes/vertex/26/position = Vector2( 840, -320 )
nodes/vertex/27/node = SubResource( 18 )
nodes/vertex/27/position = Vector2( 1080, -260 )
nodes/vertex/28/node = SubResource( 19 )
nodes/vertex/28/position = Vector2( -1040, 220 )
nodes/vertex/29/node = SubResource( 20 )
nodes/vertex/29/position = Vector2( 80, 360 )
nodes/vertex/30/node = SubResource( 21 )
nodes/vertex/30/position = Vector2( 300, 200 )
nodes/vertex/32/node = SubResource( 22 )
nodes/vertex/32/position = Vector2( -820, -860 )
nodes/vertex/37/node = SubResource( 23 )
nodes/vertex/37/position = Vector2( -620, -860 )
nodes/vertex/38/node = SubResource( 24 )
nodes/vertex/38/position = Vector2( -20, -860 )
nodes/vertex/39/node = SubResource( 25 )
nodes/vertex/39/position = Vector2( -220, -860 )
nodes/vertex/40/node = SubResource( 26 )
nodes/vertex/40/position = Vector2( -420, -860 )
nodes/vertex/44/node = SubResource( 27 )
nodes/vertex/44/position = Vector2( -20, -560 )
nodes/vertex/45/node = SubResource( 28 )
nodes/vertex/45/position = Vector2( 280, -720 )
nodes/vertex/46/node = SubResource( 29 )
nodes/vertex/46/position = Vector2( 680, -140 )
nodes/vertex/47/node = SubResource( 30 )
nodes/vertex/47/position = Vector2( -1220, -600 )
nodes/vertex/48/node = SubResource( 31 )
nodes/vertex/48/position = Vector2( -1220, -520 )
nodes/vertex/49/node = SubResource( 32 )
nodes/vertex/49/position = Vector2( -620, -760 )
nodes/vertex/connections = PoolIntArray( 6, 0, 10, 0, 10, 0, 7, 0, 10, 0, 15, 0, 10, 0, 16, 0, 7, 0, 21, 0, 15, 0, 21, 1, 16, 0, 21, 2, 21, 0, 22, 0, 23, 0, 22, 1, 25, 0, 26, 0, 20, 0, 0, 0, 28, 0, 10, 1, 22, 0, 30, 0, 29, 0, 30, 1, 26, 1, 27, 0, 27, 0, 20, 0, 13, 0, 20, 1, 39, 0, 38, 1, 40, 0, 39, 0, 38, 0, 45, 0, 44, 0, 45, 1, 46, 0, 27, 1, 45, 0, 46, 0, 47, 0, 32, 0, 48, 0, 32, 1, 47, 0, 44, 0, 48, 0, 44, 1, 49, 0, 40, 1, 32, 0, 37, 0, 37, 0, 40, 0, 30, 0, 46, 1 )
nodes/fragment/0/position = Vector2( 1400, -200 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 800, 0 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 1200, -200 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 1000, -200 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 1, 4, 0, 3, 0, 3, 0, 0, 0, 2, 1, 0, 1 )
